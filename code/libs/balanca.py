class Balanca(object):
    """Classe responsavel pela criaçao e comunicaçao de objetos
    do tipo Celula.
    Esta classe ira converter os dados de força por célula vindos
    de cada objeto do tipo Célula em outros dados mais uteis,
    como Sustentaçao, Arrasto, Momento, distancia do Cp, etc"""

    def __init__(self, Dist_025_front = 0.030, Dist_025_back = 0.150, Coef_atr = 0.005, Coef_fake_lift = 0.01, P_banc = 3.50):

        self.Dist_025_front = Dist_025_front #mm
        self.Dist_025_back = Dist_025_back #mm
        self.Coef_atr = Coef_atr
        self.Coef_fake_lift = Coef_fake_lift
        self.P_banc = P_banc #kg

        self.Lift = 0
        self.Drag = 0
        self.Moment = 0
        self.Dist_Cp_front = 0

    def updateForces(self, FH, FFD, FFE, FTD, FTE):

        self.ForcaHorizontal = FH
        self.ForcaFrontalDireita = FFD
        self.ForcaFrontalEsquerda = FFE
        self.ForcaTraseiraDireita = FTD
        self.ForcaTraseiraEsquerda = FTE

        F_horiz = self.ForcaHorizontal #kg
        F_vert_front = self.ForcaFrontalDireita + self.ForcaFrontalEsquerda #kg
        F_vert_back = self.ForcaTraseiraDireita + self.ForcaTraseiraEsquerda #kg

        # Sum of vertical forces measured on front and back vertical cells
        F_vert = F_vert_front + F_vert_back

        # Friction forces on linear guide
        F_atr = (F_vert - self.P_banc) * self.Coef_atr

        # The resulting Drag force is the subtract of the Friction force from the force measuredon the horizontal cell
        self.Drag =  F_horiz + F_atr

        # The "Fake lifts" are forces measured on the vertical cells that are in fact resultant from drag
        F_fake_lift = self.Drag * self.Coef_fake_lift

        # The resulting Lift force is the subtract of the Fake lift from the measured vertical forces
        self.Lift = F_vert - F_fake_lift

        # The resulting Moment is the resultant of the moments generated by each vertical react times it's distance from the Ca ppoint
        self.Moment = self.Dist_025_back * F_vert_back - self.Dist_025_front * F_vert_front

        # The Center of Pressure is the point were the forces act (so the moment is zero)
        try:
            self.Dist_Cp_front = (self.Dist_025_front + self.Dist_025_back) / ((F_vert_front/F_vert_back) + 1)
        except:
            pass


